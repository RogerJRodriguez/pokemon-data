{"version":3,"sources":["api/unsplash.js","pokemonNames.js","components/SearchBar.js","typeColors.js","components/List.js","components/InfoCard.js","components/LandingPage.js","components/App.js","index.js"],"names":["axios","create","baseURL","pokes","forEach","poke","push","PokemonNames","initialState","isLoading","results","value","SearchBar","state","onSearchResultSelect","e","result","setState","title","props","onSubmit","toLowerCase","console","log","onSearchChange","setTimeout","length","re","RegExp","_","escapeRegExp","filter","test","onSearchMouseDown","this","Grid","centered","Column","width","Search","loading","onResultSelect","debounce","leading","onMouseDown","React","Component","typeColors","List","fourTimesWeak","twoTimesWeak","fourTimesResist","twoTimesResist","immune","list","ListGroup","Item","style","color","fontWeight","marginRight","map","i","background","className","Card","variant","InfoCard","activeIndex","activeKey","current","typeDamageCalculations","type1","type2","typeDamage","type1Name","type2Name","flag","double_damage_from","name","t","half_damage_from","no_damage_from","includes","pokeImage","pokemonData","image","sprites","type1_damage","damage_relations","type2_damage","types","src","marginTop","marginBottom","pokeName","toUpperCase","type","pokeTyping","navbar","Nav","defaultActiveKey","onSelect","selected","Link","eventKey","class","undefined","LandingPage","tempNames","j","Math","floor","random","arr","pokes1","pokes2","tempPoke1","tempPoke2","Carousel","interval","controls","indicators","App","front_default","landingPageOn","onSearchSubmit","term","a","unsplash","get","response","data","ReactDOM","render","document","querySelector"],"mappings":"0QAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAQ,8B,mCCg5BRC,EAAQ,GAn5BI,CACZ,YACA,UACA,WACA,aACA,aACA,YACA,WACA,YACA,YACA,WACA,UACA,aACA,SACA,SACA,WACA,SACA,YACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,UACA,SACA,YACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WACA,SACA,YACA,aACA,aACA,QACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,YACA,WACA,UACA,YACA,YACA,OACA,UACA,WACA,SACA,UACA,UACA,aACA,aACA,aACA,YACA,aACA,UACA,WACA,QACA,SACA,WACA,WACA,UACA,YACA,WACA,kBACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,WACA,SACA,UACA,SACA,OACA,UACA,QACA,SACA,UACA,UACA,YACA,YACA,YACA,SACA,UACA,YACA,aACA,YACA,UACA,UACA,UACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,OACA,aACA,SACA,SACA,SACA,WACA,WACA,SACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,YACA,SACA,MACA,YACA,UACA,WACA,YACA,UACA,aACA,WACA,WACA,aACA,UACA,SACA,WACA,UACA,SACA,SACA,WACA,UACA,SACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,OACA,OACA,SACA,UACA,WACA,YACA,SACA,YACA,YACA,WACA,SACA,WACA,WACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,UACA,WACA,aACA,QACA,YACA,YACA,SACA,aACA,YACA,SACA,UACA,WACA,WACA,WACA,SACA,UACA,YACA,UACA,YACA,WACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,UACA,YACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,SACA,YACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,UACA,SACA,QACA,SACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,QACA,SACA,YACA,UACA,aACA,YACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,SACA,OACA,SACA,SACA,WACA,WACA,YACA,YACA,SACA,QACA,UACA,WACA,UACA,SACA,SACA,WACA,WACA,UACA,UACA,QACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,SACA,SACA,WACA,SACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,UACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,YACA,UACA,QACA,UACA,YACA,SACA,SACA,YACA,WACA,SACA,YACA,SACA,SACA,SACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,YACA,SACA,UACA,YACA,aACA,QACA,QACA,SACA,QACA,WACA,WACA,YACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,WACA,UACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,WACA,QACA,UACA,aACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,UACA,SACA,YACA,UACA,YACA,aACA,YACA,YACA,aACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,WACA,QACA,OACA,UACA,QACA,SACA,SACA,UACA,YACA,WACA,YACA,SACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,YACA,QACA,UACA,SACA,WACA,SACA,WACA,SACA,UACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,QACA,WACA,SACA,YACA,WACA,UACA,YACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,SACA,UACA,UACA,aACA,UACA,YACA,aACA,QACA,OACA,WACA,WACA,WACA,WACA,aACA,YACA,WACA,aACA,UACA,YACA,WACA,UACA,WACA,aACA,WACA,aACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,aACA,WACA,aACA,SACA,WACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,YACA,aACA,UACA,UACA,YACA,WACA,SACA,YACA,YACA,YACA,WACA,WACA,SACA,aACA,aACA,UACA,YACA,WACA,YACA,YACA,SACA,aACA,YACA,aACA,QACA,QACA,YACA,SACA,YACA,aACA,SACA,WACA,UACA,UACA,aACA,OACA,UACA,UACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,YACA,SACA,SACA,WACA,UACA,aACA,UACA,WACA,UACA,YACA,UACA,SACA,QACA,WACA,YACA,WACA,YACA,WACA,YACA,WACA,WACA,YACA,WACA,SACA,WACA,SACA,SACA,WACA,WACA,UACA,YACA,aACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,aACA,cACA,aACA,aACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,SACA,WACA,UACA,WACA,YACA,WACA,aACA,UACA,WACA,QACA,UACA,UACA,aACA,SACA,WACA,YACA,YACA,aACA,YACA,SACA,YACA,SACA,UACA,UACA,WACA,UACA,UACA,QACA,UACA,SACA,SACA,WACA,YACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,YACA,SACA,UACA,YACA,SACA,WACA,aACA,UACA,UACA,YACA,UACA,WACA,YACA,UACA,WACA,UACA,YACA,WACA,aACA,eACA,WACA,WACA,WACA,WACA,WACA,aACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,WACA,WACA,UACA,SACA,YACA,UACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,YACA,WACA,SACA,SACA,aACA,aACA,UACA,UACA,SACA,WACA,WACA,WACA,UACA,gBACA,iBACA,eACA,kBACA,kBACA,eACA,kBACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,cACA,eACA,YACA,kBACA,gBACA,YACA,YACA,YACA,YACA,SACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,aACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,YACA,cACA,UACA,SACA,WACA,UACA,WACA,YACA,YACA,SACA,YACA,SACA,WACA,WACA,UACA,WACA,WACA,cACA,cACA,UACA,UACA,WACA,SACA,UACA,aACA,WACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,SACA,YACA,SACA,UACA,WACA,YACA,aACA,YACA,WACA,cACA,QACA,aACA,aACA,cACA,YACA,YACA,WACA,cACA,UACA,UACA,YACA,WACA,UACA,aACA,kBACA,gBACA,YACA,aACA,UACA,kBACA,YACA,gBACA,UACA,eACA,YACA,UACA,WACA,UACA,aACA,OACA,WACA,cACA,SACA,WACA,UACA,SACA,aACA,YACA,YACA,YACA,YACA,YACA,SACA,WACA,YACA,SACA,YACA,aAIMC,SAAQ,SAAAC,GAAI,OAAIF,EAAMG,KAAK,CAAC,MAASD,OAC/C,IAEeE,EAFMJ,ECh5BfK,EAAe,CAAEC,WAAW,EAAOC,QAAS,GAAIC,MAAO,qBAqD9CC,E,4MAlDXC,MAAQL,E,EAERM,qBAAuB,SAACC,E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","file":"static/js/main.130a8ba9.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: `https://pokeapi.co/api/v2`\n});","var pokeArray = [\n    \"Bulbasaur\",\n    \"Ivysaur\",\n    \"Venusaur\",\n    \"Charmander\",\n    \"Charmeleon\",\n    \"Charizard\",\n    \"Squirtle\",\n    \"Wartortle\",\n    \"Blastoise\",\n    \"Caterpie\",\n    \"Metapod\",\n    \"Butterfree\",\n    \"Weedle\",\n    \"Kakuna\",\n    \"Beedrill\",\n    \"Pidgey\",\n    \"Pidgeotto\",\n    \"Pidgeot\",\n    \"Rattata\",\n    \"Raticate\",\n    \"Spearow\",\n    \"Fearow\",\n    \"Ekans\",\n    \"Arbok\",\n    \"Pikachu\",\n    \"Raichu\",\n    \"Sandshrew\",\n    \"Sandslash\",\n    \"Nidoran\",\n    \"Nidorina\",\n    \"Nidoqueen\",\n    \"Nidorino\",\n    \"Nidoking\",\n    \"Clefairy\",\n    \"Clefable\",\n    \"Vulpix\",\n    \"Ninetales\",\n    \"Jigglypuff\",\n    \"Wigglytuff\",\n    \"Zubat\",\n    \"Golbat\",\n    \"Oddish\",\n    \"Gloom\",\n    \"Vileplume\",\n    \"Paras\",\n    \"Parasect\",\n    \"Venonat\",\n    \"Venomoth\",\n    \"Diglett\",\n    \"Dugtrio\",\n    \"Meowth\",\n    \"Persian\",\n    \"Psyduck\",\n    \"Golduck\",\n    \"Mankey\",\n    \"Primeape\",\n    \"Growlithe\",\n    \"Arcanine\",\n    \"Poliwag\",\n    \"Poliwhirl\",\n    \"Poliwrath\",\n    \"Abra\",\n    \"Kadabra\",\n    \"Alakazam\",\n    \"Machop\",\n    \"Machoke\",\n    \"Machamp\",\n    \"Bellsprout\",\n    \"Weepinbell\",\n    \"Victreebel\",\n    \"Tentacool\",\n    \"Tentacruel\",\n    \"Geodude\",\n    \"Graveler\",\n    \"Golem\",\n    \"Ponyta\",\n    \"Rapidash\",\n    \"Slowpoke\",\n    \"Slowbro\",\n    \"Magnemite\",\n    \"Magneton\",\n    \"Farfetch’d\",\n    \"Doduo\",\n    \"Dodrio\",\n    \"Seel\",\n    \"Dewgong\",\n    \"Grimer\",\n    \"Muk\",\n    \"Shellder\",\n    \"Cloyster\",\n    \"Gastly\",\n    \"Haunter\",\n    \"Gengar\",\n    \"Onix\",\n    \"Drowzee\",\n    \"Hypno\",\n    \"Krabby\",\n    \"Kingler\",\n    \"Voltorb\",\n    \"Electrode\",\n    \"Exeggcute\",\n    \"Exeggutor\",\n    \"Cubone\",\n    \"Marowak\",\n    \"Hitmonlee\",\n    \"Hitmonchan\",\n    \"Lickitung\",\n    \"Koffing\",\n    \"Weezing\",\n    \"Rhyhorn\",\n    \"Rhydon\",\n    \"Chansey\",\n    \"Tangela\",\n    \"Kangaskhan\",\n    \"Horsea\",\n    \"Seadra\",\n    \"Goldeen\",\n    \"Seaking\",\n    \"Staryu\",\n    \"Starmie\",\n    \"Mr-Mime\",\n    \"Scyther\",\n    \"Jynx\",\n    \"Electabuzz\",\n    \"Magmar\",\n    \"Pinsir\",\n    \"Tauros\",\n    \"Magikarp\",\n    \"Gyarados\",\n    \"Lapras\",\n    \"Ditto\",\n    \"Eevee\",\n    \"Vaporeon\",\n    \"Jolteon\",\n    \"Flareon\",\n    \"Porygon\",\n    \"Omanyte\",\n    \"Omastar\",\n    \"Kabuto\",\n    \"Kabutops\",\n    \"Aerodactyl\",\n    \"Snorlax\",\n    \"Articuno\",\n    \"Zapdos\",\n    \"Moltres\",\n    \"Dratini\",\n    \"Dragonair\",\n    \"Dragonite\",\n    \"Mewtwo\",\n    \"Mew\",\n    \"Chikorita\",\n    \"Bayleef\",\n    \"Meganium\",\n    \"Cyndaquil\",\n    \"Quilava\",\n    \"Typhlosion\",\n    \"Totodile\",\n    \"Croconaw\",\n    \"Feraligatr\",\n    \"Sentret\",\n    \"Furret\",\n    \"Hoothoot\",\n    \"Noctowl\",\n    \"Ledyba\",\n    \"Ledian\",\n    \"Spinarak\",\n    \"Ariados\",\n    \"Crobat\",\n    \"Chinchou\",\n    \"Lanturn\",\n    \"Pichu\",\n    \"Cleffa\",\n    \"Igglybuff\",\n    \"Togepi\",\n    \"Togetic\",\n    \"Natu\",\n    \"Xatu\",\n    \"Mareep\",\n    \"Flaaffy\",\n    \"Ampharos\",\n    \"Bellossom\",\n    \"Marill\",\n    \"Azumarill\",\n    \"Sudowoodo\",\n    \"Politoed\",\n    \"Hoppip\",\n    \"Skiploom\",\n    \"Jumpluff\",\n    \"Aipom\",\n    \"Sunkern\",\n    \"Sunflora\",\n    \"Yanma\",\n    \"Wooper\",\n    \"Quagsire\",\n    \"Espeon\",\n    \"Umbreon\",\n    \"Murkrow\",\n    \"Slowking\",\n    \"Misdreavus\",\n    \"Unown\",\n    \"Wobbuffet\",\n    \"Girafarig\",\n    \"Pineco\",\n    \"Forretress\",\n    \"Dunsparce\",\n    \"Gligar\",\n    \"Steelix\",\n    \"Snubbull\",\n    \"Granbull\",\n    \"Qwilfish\",\n    \"Scizor\",\n    \"Shuckle\",\n    \"Heracross\",\n    \"Sneasel\",\n    \"Teddiursa\",\n    \"Ursaring\",\n    \"Slugma\",\n    \"Magcargo\",\n    \"Swinub\",\n    \"Piloswine\",\n    \"Corsola\",\n    \"Remoraid\",\n    \"Octillery\",\n    \"Delibird\",\n    \"Mantine\",\n    \"Skarmory\",\n    \"Houndour\",\n    \"Houndoom\",\n    \"Kingdra\",\n    \"Phanpy\",\n    \"Donphan\",\n    \"Porygon2\",\n    \"Stantler\",\n    \"Smeargle\",\n    \"Tyrogue\",\n    \"Hitmontop\",\n    \"Smoochum\",\n    \"Elekid\",\n    \"Magby\",\n    \"Miltank\",\n    \"Blissey\",\n    \"Raikou\",\n    \"Entei\",\n    \"Suicune\",\n    \"Larvitar\",\n    \"Pupitar\",\n    \"Tyranitar\",\n    \"Lugia\",\n    \"Ho-Oh\",\n    \"Celebi\",\n    \"Treecko\",\n    \"Grovyle\",\n    \"Sceptile\",\n    \"Torchic\",\n    \"Combusken\",\n    \"Blaziken\",\n    \"Mudkip\",\n    \"Marshtomp\",\n    \"Swampert\",\n    \"Poochyena\",\n    \"Mightyena\",\n    \"Zigzagoon\",\n    \"Linoone\",\n    \"Wurmple\",\n    \"Silcoon\",\n    \"Beautifly\",\n    \"Cascoon\",\n    \"Dustox\",\n    \"Lotad\",\n    \"Lombre\",\n    \"Ludicolo\",\n    \"Seedot\",\n    \"Nuzleaf\",\n    \"Shiftry\",\n    \"Taillow\",\n    \"Swellow\",\n    \"Wingull\",\n    \"Pelipper\",\n    \"Ralts\",\n    \"Kirlia\",\n    \"Gardevoir\",\n    \"Surskit\",\n    \"Masquerain\",\n    \"Shroomish\",\n    \"Breloom\",\n    \"Slakoth\",\n    \"Vigoroth\",\n    \"Slaking\",\n    \"Nincada\",\n    \"Ninjask\",\n    \"Shedinja\",\n    \"Whismur\",\n    \"Loudred\",\n    \"Exploud\",\n    \"Makuhita\",\n    \"Hariyama\",\n    \"Azurill\",\n    \"Nosepass\",\n    \"Skitty\",\n    \"Delcatty\",\n    \"Sableye\",\n    \"Mawile\",\n    \"Aron\",\n    \"Lairon\",\n    \"Aggron\",\n    \"Meditite\",\n    \"Medicham\",\n    \"Electrike\",\n    \"Manectric\",\n    \"Plusle\",\n    \"Minun\",\n    \"Volbeat\",\n    \"Illumise\",\n    \"Roselia\",\n    \"Gulpin\",\n    \"Swalot\",\n    \"Carvanha\",\n    \"Sharpedo\",\n    \"Wailmer\",\n    \"Wailord\",\n    \"Numel\",\n    \"Camerupt\",\n    \"Torkoal\",\n    \"Spoink\",\n    \"Grumpig\",\n    \"Spinda\",\n    \"Trapinch\",\n    \"Vibrava\",\n    \"Flygon\",\n    \"Cacnea\",\n    \"Cacturne\",\n    \"Swablu\",\n    \"Altaria\",\n    \"Zangoose\",\n    \"Seviper\",\n    \"Lunatone\",\n    \"Solrock\",\n    \"Barboach\",\n    \"Whiscash\",\n    \"Corphish\",\n    \"Crawdaunt\",\n    \"Baltoy\",\n    \"Claydol\",\n    \"Lileep\",\n    \"Cradily\",\n    \"Anorith\",\n    \"Armaldo\",\n    \"Feebas\",\n    \"Milotic\",\n    \"Castform\",\n    \"Kecleon\",\n    \"Shuppet\",\n    \"Banette\",\n    \"Duskull\",\n    \"Dusclops\",\n    \"Tropius\",\n    \"Chimecho\",\n    \"Absol\",\n    \"Wynaut\",\n    \"Snorunt\",\n    \"Glalie\",\n    \"Spheal\",\n    \"Sealeo\",\n    \"Walrein\",\n    \"Clamperl\",\n    \"Huntail\",\n    \"Gorebyss\",\n    \"Relicanth\",\n    \"Luvdisc\",\n    \"Bagon\",\n    \"Shelgon\",\n    \"Salamence\",\n    \"Beldum\",\n    \"Metang\",\n    \"Metagross\",\n    \"Regirock\",\n    \"Regice\",\n    \"Registeel\",\n    \"Latias\",\n    \"Latios\",\n    \"Kyogre\",\n    \"Groudon\",\n    \"Rayquaza\",\n    \"Jirachi\",\n    \"Deoxys\",\n    \"Turtwig\",\n    \"Grotle\",\n    \"Torterra\",\n    \"Chimchar\",\n    \"Monferno\",\n    \"Infernape\",\n    \"Piplup\",\n    \"Prinplup\",\n    \"Empoleon\",\n    \"Starly\",\n    \"Staravia\",\n    \"Staraptor\",\n    \"Bidoof\",\n    \"Bibarel\",\n    \"Kricketot\",\n    \"Kricketune\",\n    \"Shinx\",\n    \"Luxio\",\n    \"Luxray\",\n    \"Budew\",\n    \"Roserade\",\n    \"Cranidos\",\n    \"Rampardos\",\n    \"Shieldon\",\n    \"Bastiodon\",\n    \"Burmy\",\n    \"Wormadam\",\n    \"Mothim\",\n    \"Combee\",\n    \"Vespiquen\",\n    \"Pachirisu\",\n    \"Buizel\",\n    \"Floatzel\",\n    \"Cherubi\",\n    \"Cherrim\",\n    \"Shellos\",\n    \"Gastrodon\",\n    \"Ambipom\",\n    \"Drifloon\",\n    \"Drifblim\",\n    \"Buneary\",\n    \"Lopunny\",\n    \"Mismagius\",\n    \"Honchkrow\",\n    \"Glameow\",\n    \"Purugly\",\n    \"Chingling\",\n    \"Stunky\",\n    \"Skuntank\",\n    \"Bronzor\",\n    \"Bronzong\",\n    \"Bonsly\",\n    \"Mime-Jr\",\n    \"Happiny\",\n    \"Chatot\",\n    \"Spiritomb\",\n    \"Gible\",\n    \"Gabite\",\n    \"Garchomp\",\n    \"Munchlax\",\n    \"Riolu\",\n    \"Lucario\",\n    \"Hippopotas\",\n    \"Hippowdon\",\n    \"Skorupi\",\n    \"Drapion\",\n    \"Croagunk\",\n    \"Toxicroak\",\n    \"Carnivine\",\n    \"Finneon\",\n    \"Lumineon\",\n    \"Mantyke\",\n    \"Snover\",\n    \"Abomasnow\",\n    \"Weavile\",\n    \"Magnezone\",\n    \"Lickilicky\",\n    \"Rhyperior\",\n    \"Tangrowth\",\n    \"Electivire\",\n    \"Magmortar\",\n    \"Togekiss\",\n    \"Yanmega\",\n    \"Leafeon\",\n    \"Glaceon\",\n    \"Gliscor\",\n    \"Mamoswine\",\n    \"Porygon-Z\",\n    \"Gallade\",\n    \"Probopass\",\n    \"Dusknoir\",\n    \"Froslass\",\n    \"Rotom\",\n    \"Uxie\",\n    \"Mesprit\",\n    \"Azelf\",\n    \"Dialga\",\n    \"Palkia\",\n    \"Heatran\",\n    \"Regigigas\",\n    \"Giratina\",\n    \"Cresselia\",\n    \"Phione\",\n    \"Manaphy\",\n    \"Darkrai\",\n    \"Shaymin\",\n    \"Arceus\",\n    \"Victini\",\n    \"Snivy\",\n    \"Servine\",\n    \"Serperior\",\n    \"Tepig\",\n    \"Pignite\",\n    \"Emboar\",\n    \"Oshawott\",\n    \"Dewott\",\n    \"Samurott\",\n    \"Patrat\",\n    \"Watchog\",\n    \"Lillipup\",\n    \"Herdier\",\n    \"Stoutland\",\n    \"Purrloin\",\n    \"Liepard\",\n    \"Pansage\",\n    \"Simisage\",\n    \"Pansear\",\n    \"Simisear\",\n    \"Panpour\",\n    \"Simipour\",\n    \"Munna\",\n    \"Musharna\",\n    \"Pidove\",\n    \"Tranquill\",\n    \"Unfezant\",\n    \"Blitzle\",\n    \"Zebstrika\",\n    \"Roggenrola\",\n    \"Boldore\",\n    \"Gigalith\",\n    \"Woobat\",\n    \"Swoobat\",\n    \"Drilbur\",\n    \"Excadrill\",\n    \"Audino\",\n    \"Timburr\",\n    \"Gurdurr\",\n    \"Conkeldurr\",\n    \"Tympole\",\n    \"Palpitoad\",\n    \"Seismitoad\",\n    \"Throh\",\n    \"Sawk\",\n    \"Sewaddle\",\n    \"Swadloon\",\n    \"Leavanny\",\n    \"Venipede\",\n    \"Whirlipede\",\n    \"Scolipede\",\n    \"Cottonee\",\n    \"Whimsicott\",\n    \"Petilil\",\n    \"Lilligant\",\n    \"Basculin\",\n    \"Sandile\",\n    \"Krokorok\",\n    \"Krookodile\",\n    \"Darumaka\",\n    \"Darmanitan\",\n    \"Maractus\",\n    \"Dwebble\",\n    \"Crustle\",\n    \"Scraggy\",\n    \"Scrafty\",\n    \"Sigilyph\",\n    \"Yamask\",\n    \"Cofagrigus\",\n    \"Tirtouga\",\n    \"Carracosta\",\n    \"Archen\",\n    \"Archeops\",\n    \"Trubbish\",\n    \"Garbodor\",\n    \"Zorua\",\n    \"Zoroark\",\n    \"Minccino\",\n    \"Cinccino\",\n    \"Gothita\",\n    \"Gothorita\",\n    \"Gothitelle\",\n    \"Solosis\",\n    \"Duosion\",\n    \"Reuniclus\",\n    \"Ducklett\",\n    \"Swanna\",\n    \"Vanillite\",\n    \"Vanillish\",\n    \"Vanilluxe\",\n    \"Deerling\",\n    \"Sawsbuck\",\n    \"Emolga\",\n    \"Karrablast\",\n    \"Escavalier\",\n    \"Foongus\",\n    \"Amoonguss\",\n    \"Frillish\",\n    \"Jellicent\",\n    \"Alomomola\",\n    \"Joltik\",\n    \"Galvantula\",\n    \"Ferroseed\",\n    \"Ferrothorn\",\n    \"Klink\",\n    \"Klang\",\n    \"Klinklang\",\n    \"Tynamo\",\n    \"Eelektrik\",\n    \"Eelektross\",\n    \"Elgyem\",\n    \"Beheeyem\",\n    \"Litwick\",\n    \"Lampent\",\n    \"Chandelure\",\n    \"Axew\",\n    \"Fraxure\",\n    \"Haxorus\",\n    \"Cubchoo\",\n    \"Beartic\",\n    \"Cryogonal\",\n    \"Shelmet\",\n    \"Accelgor\",\n    \"Stunfisk\",\n    \"Mienfoo\",\n    \"Mienshao\",\n    \"Druddigon\",\n    \"Golett\",\n    \"Golurk\",\n    \"Pawniard\",\n    \"Bisharp\",\n    \"Bouffalant\",\n    \"Rufflet\",\n    \"Braviary\",\n    \"Vullaby\",\n    \"Mandibuzz\",\n    \"Heatmor\",\n    \"Durant\",\n    \"Deino\",\n    \"Zweilous\",\n    \"Hydreigon\",\n    \"Larvesta\",\n    \"Volcarona\",\n    \"Cobalion\",\n    \"Terrakion\",\n    \"Virizion\",\n    \"Tornadus\",\n    \"Thundurus\",\n    \"Reshiram\",\n    \"Zekrom\",\n    \"Landorus\",\n    \"Kyurem\",\n    \"Keldeo\",\n    \"Meloetta\",\n    \"Genesect\",\n    \"Chespin\",\n    \"Quilladin\",\n    \"Chesnaught\",\n    \"Fennekin\",\n    \"Braixen\",\n    \"Delphox\",\n    \"Froakie\",\n    \"Frogadier\",\n    \"Greninja\",\n    \"Bunnelby\",\n    \"Diggersby\",\n    \"Fletchling\",\n    \"Fletchinder\",\n    \"Talonflame\",\n    \"Scatterbug\",\n    \"Spewpa\",\n    \"Vivillon\",\n    \"Litleo\",\n    \"Pyroar\",\n    \"Flabebe\",\n    \"Floette\",\n    \"Florges\",\n    \"Skiddo\",\n    \"Gogoat\",\n    \"Pancham\",\n    \"Pangoro\",\n    \"Furfrou\",\n    \"Espurr\",\n    \"Meowstic\",\n    \"Honedge\",\n    \"Doublade\",\n    \"Aegislash\",\n    \"Spritzee\",\n    \"Aromatisse\",\n    \"Swirlix\",\n    \"Slurpuff\",\n    \"Inkay\",\n    \"Malamar\",\n    \"Binacle\",\n    \"Barbaracle\",\n    \"Skrelp\",\n    \"Dragalge\",\n    \"Clauncher\",\n    \"Clawitzer\",\n    \"Helioptile\",\n    \"Heliolisk\",\n    \"Tyrunt\",\n    \"Tyrantrum\",\n    \"Amaura\",\n    \"Aurorus\",\n    \"Sylveon\",\n    \"Hawlucha\",\n    \"Dedenne\",\n    \"Carbink\",\n    \"Goomy\",\n    \"Sliggoo\",\n    \"Goodra\",\n    \"Klefki\",\n    \"Phantump\",\n    \"Trevenant\",\n    \"Pumpkaboo\",\n    \"Gourgeist\",\n    \"Bergmite\",\n    \"Avalugg\",\n    \"Noibat\",\n    \"Noivern\",\n    \"Xerneas\",\n    \"Yveltal\",\n    \"Zygarde\",\n    \"Diancie\",\n    \"Hoopa\",\n    \"Volcanion\",\n    \"Rowlet\",\n    \"Dartrix\",\n    \"Decidueye\",\n    \"Litten\",\n    \"Torracat\",\n    \"Incineroar\",\n    \"Popplio\",\n    \"Brionne\",\n    \"Primarina\",\n    \"Pikipek\",\n    \"Trumbeak\",\n    \"Toucannon\",\n    \"Yungoos\",\n    \"Gumshoos\",\n    \"Grubbin\",\n    \"Charjabug\",\n    \"Vikavolt\",\n    \"Crabrawler\",\n    \"Crabominable\",\n    \"Oricorio\",\n    \"Cutiefly\",\n    \"Ribombee\",\n    \"Rockruff\",\n    \"Lycanroc\",\n    \"Wishiwashi\",\n    \"Mareanie\",\n    \"Toxapex\",\n    \"Mudbray\",\n    \"Mudsdale\",\n    \"Dewpider\",\n    \"Araquanid\",\n    \"Fomantis\",\n    \"Lurantis\",\n    \"Morelull\",\n    \"Shiinotic\",\n    \"Salandit\",\n    \"Salazzle\",\n    \"Stufful\",\n    \"Bewear\",\n    \"Bounsweet\",\n    \"Steenee\",\n    \"Tsareena\",\n    \"Comfey\",\n    \"Oranguru\",\n    \"Passimian\",\n    \"Wimpod\",\n    \"Golisopod\",\n    \"Sandygast\",\n    \"Palossand\",\n    \"Pyukumuku\",\n    \"Type-Null\",\n    \"Silvally\",\n    \"Minior\",\n    \"Komala\",\n    \"Turtonator\",\n    \"Togedemaru\",\n    \"Mimikyu\",\n    \"Bruxish\",\n    \"Drampa\",\n    \"Dhelmise\",\n    \"Jangmo-o\",\n    \"Hakamo-o\",\n    \"Kommo-o\",\n    \"Rattata-alola\",\n    \"Raticate-alola\",\n    \"Raichu-alola\",\n    \"Sandshrew-alola\",\n    \"Sandslash-alola\",\n    \"Vulpix-alola\",\n    \"Ninetales-alola\",\n    \"Diglett-alola\",\n    \"Dugtrio-alola\",\n    \"Meowth-alola\",\n    \"Persian-alola\",\n    \"Geodude-alola\",\n    \"Graveler-alola\",\n    \"Golem-alola\",\n    \"Grimer-alola\",\n    \"Muk-alola\",\n    \"Exeggutor-alola\",\n    \"Marowak-alola\",\n    \"Tapu-Koko\",\n    \"Tapu-Lele\",\n    \"Tapu-Bulu\",\n    \"Tapu-Fini\",\n    \"Cosmog\",\n    \"Cosmoem\",\n    \"Solgaleo\",\n    \"Lunala\",\n    \"Nihilego\",\n    \"Buzzwole\",\n    \"Pheromosa\",\n    \"Xurkitree\",\n    \"Celesteela\",\n    \"Kartana\",\n    \"Guzzlord\",\n    \"Necrozma\",\n    \"Magearna\",\n    \"Marshadow\",\n    \"Poipole\",\n    \"Naganadel\",\n    \"Stakataka\",\n    \"Blacephalon\",\n    \"Zeraora\",\n    \"Meltan\",\n    \"Melmetal\",\n    \"Grookey\",\n    \"Thwackey\",\n    \"Rillaboom\",\n    \"Scorbunny\",\n    \"Raboot\",\n    \"Cinderace\",\n    \"Sobble\",\n    \"Drizzile\",\n    \"Inteleon\",\n    \"Skwovet\",\n    \"Greedent\",\n    \"Rookidee\",\n    \"Corvisquire\",\n    \"Corviknight\",\n    \"Blipbug\",\n    \"Dottler\",\n    \"Orbeetle\",\n    \"Nickit\",\n    \"Thievul\",\n    \"Gossifleur\",\n    \"Eldegoss\",\n    \"Wooloo\",\n    \"Dubwool\",\n    \"Chewtle\",\n    \"Drednaw\",\n    \"Yampur\",\n    \"Boltund\",\n    \"Rolycoly\",\n    \"Carkol\",\n    \"Coalossal\",\n    \"Applin\",\n    \"Flapple\",\n    \"Appletun\",\n    \"Silicobra\",\n    \"Sandaconda\",\n    \"Cramorant\",\n    \"Arrokuda\",\n    \"Barraskewda\",\n    \"Toxel\",\n    \"Toxtricity\",\n    \"Sizzlipede\",\n    \"Centiskorch\",\n    \"Clobbopus\",\n    \"Grapploct\",\n    \"Sinistea\",\n    \"Polteageist\",\n    \"Hatenna\",\n    \"Hattrem\",\n    \"Hatterene\",\n    \"Impidimp\",\n    \"Morgrem\",\n    \"Grimmsnarl\",\n    \"Zigzagoon-galar\",\n    \"Linoone-galar\",\n    \"Obstagoon\",\n    \"Perrserker\",\n    \"Cursola\",\n    \"Farfetchd-galar\",\n    \"Sirfetchd\", \n    \"Mr-Mime-galar\", \n    \"Mr-Rime\", \n    \"Yamask-galar\", \n    \"Runerigus\", \n    \"Milcery\", \n    \"Alcremie\", \n    \"Falinks\", \n    \"Pincurchin\", \n    \"Snom\", \n    \"Frosmoth\", \n    \"Stonjourner\", \n    \"Eiscue\", \n    \"Indeedee\", \n    \"Morpeko\", \n    \"Cufant\", \n    \"Copperajah\", \n    \"Dracozolt\", \n    \"Arctozolt\", \n    \"Dracovish\", \n    \"Arctovish\", \n    \"Duraludon\", \n    \"Dreepy\", \n    \"Drakloak\", \n    \"Dragapult\", \n    \"Zacian\", \n    \"Zamazenta\", \n    \"Eternatus\"\n];\n\nvar pokes = [];\npokeArray.forEach(poke => pokes.push({\"title\": poke}));\nconst PokemonNames = pokes;\n\nexport default PokemonNames;","import React from 'react';\nimport _ from 'lodash';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nimport PokemonNames from '../pokemonNames';\n\nconst initialState = { isLoading: false, results: [], value: 'Search Pokemon...' };\n\nclass SearchBar extends React.Component {\n    state = initialState;\n\n    onSearchResultSelect = (e, { result }) => {\n        this.setState({ value: result.title });\n        this.props.onSubmit(result.title.toLowerCase());\n        console.log(result.title);\n    }\n\n    onSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, value })\n\n        setTimeout(() => {\n            if (this.state.value.length < 1) return this.setState(initialState)\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n            const isMatch = (result) => re.test(result.title)\n\n            this.setState({\n                isLoading: false,\n                results: _.filter(PokemonNames, isMatch),\n            })\n        }, 300)\n    }\n\n    onSearchMouseDown = (e) => {\n        this.setState({ value: '' });\n    }\n\n    render() {\n        const { isLoading, value, results } = this.state;\n        return (\n            <Grid centered>\n                <Grid.Column width={10}>\n                <Search\n                    loading={isLoading}\n                    onResultSelect={this.onSearchResultSelect}\n                    onSearchChange={_.debounce(this.onSearchChange, 500, {\n                    leading: true,\n                    })}\n                    onMouseDown={this.onSearchMouseDown}\n                    results={results}\n                    value={value}\n                    {...this.props}\n                />\n                </Grid.Column>\n            </Grid>\n        );\n    }\n}\n\nexport default SearchBar;","const typeColors = {\n    \"normal\": {\n        \"background\": '#aa9'\n    },\n\n    \"fire\": {\n        \"background\": '#f42'\n    },\n\n    \"water\": {\n        \"background\": '#39f'\n    },\n\n    \"electric\": {\n        \"background\": '#fc3'\n    },\n\n    \"grass\": {\n        \"background\": '#7c5'\n    },\n\n    \"ice\": {\n        \"background\": '#6cf'\n    },\n\n    \"fighting\": {\n        \"background\": '#b54'\n    },\n\n    \"poison\": {\n        \"background\": '#a59'\n    },\n\n    \"ground\": {\n        \"background\": '#db5'\n    },\n\n    \"flying\": {\n        \"background\": '#89f'\n    },\n\n    \"psychic\": {\n        \"background\": '#f59'\n    },\n\n    \"bug\": {\n        \"background\": '#ab2'\n    },\n\n    \"rock\": {\n        \"background\": '#ba6'\n    },\n\n    \"ghost\": {\n        \"background\": '#66b'\n    },\n\n    \"dragon\": {\n        \"background\": '#76e'\n    },\n\n    \"dark\": {\n        \"background\": '#754'\n    },\n\n    \"steel\": {\n        \"background\": '#aab'\n    },\n\n    \"fairy\": {\n        \"background\": '#e9e'\n    }\n};\n\nexport default typeColors;","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport typeColors from '../typeColors';\n\nconst List = (props) => {\n    const { \n        fourTimesWeak,\n        twoTimesWeak,\n        fourTimesResist,\n        twoTimesResist,\n        immune\n    } = props;\n    \n    console.log(fourTimesWeak);\n    console.log(twoTimesWeak);\n    console.log(fourTimesResist);\n    console.log(twoTimesResist);\n    console.log(immune);\n    \n    var list = [];\n    if(fourTimesWeak?.length > 0) {\n        list.push(<ListGroup.Item><span style={{ color: 'red', fontWeight: 'bold', marginRight: '5px' }}>4x:   </span>{fourTimesWeak?.map(i => { var color = typeColors[i].background; return <span className={'badge badge-pill'} style={{ background: `${color}`, color: 'white', marginRight: '5px' }}>{i} </span> })}</ListGroup.Item>);\n    }\n    if(twoTimesWeak?.length > 0) {\n        list.push(<ListGroup.Item><span style={{ color: 'crimson', fontWeight: 'bold', marginRight: '5px' }}>2x:   </span>{twoTimesWeak?.map(i => { var color = typeColors[i].background; return <span className={'badge badge-pill'} style={{ background: `${color}`, color: 'white', marginRight: '5px' }}>{i} </span> })}</ListGroup.Item>);\n    }\n    if(fourTimesResist?.length > 0) {\n        list.push(<ListGroup.Item><span style={{ color: 'aquamarine', fontWeight: 'bold', marginRight: '5px' }}>.25x:   </span>{fourTimesResist?.map(i => { var color = typeColors[i].background; return <span className={'badge badge-pill'} style={{ background: `${color}`, color: 'white', marginRight: '5px' }}>{i} </span> })}</ListGroup.Item>);\n    }\n    if(twoTimesResist?.length > 0) {\n        list.push(<ListGroup.Item><span style={{ color: 'lightgreen', fontWeight: 'bold', marginRight: '5px' }}>.5x:   </span>{twoTimesResist?.map(i => { var color = typeColors[i].background; return <span className={'badge badge-pill'} style={{ background: `${color}`, color: 'white', marginRight: '5px' }}>{i} </span> })}</ListGroup.Item>);\n    }\n    if(immune?.length > 0) {\n        list.push(<ListGroup.Item><span style={{ color: 'white', fontWeight: 'bold', marginRight: '5px' }}>0x:   </span>{immune?.map(i => { var color = typeColors[i].background; return <span className={'badge badge-pill'} style={{ background: `${color}`, color: 'white', marginRight: '5px' }}>{i} </span> })}</ListGroup.Item>);\n    }\n\n    return (\n        <Card>\n            <ListGroup variant=\"flush\">\n                {list}\n            </ListGroup>\n        </Card>\n    );\n}\n\nexport default List;","import React from 'react';\nimport { Accordion, Icon } from 'semantic-ui-react';\nimport { Nav } from 'react-bootstrap';\nimport List from './List';\nimport typeColors from '../typeColors';\n\nclass InfoCard extends React.Component {\n    state = { \n        activeIndex: -1,\n        activeKey: 'link-0',\n        current: ''\n    };\n\n    typeDamageCalculations = (type1, type2) => {\n        var typeDamage = {};\n        var fourTimesWeak = [];\n        var twoTimesWeak = [];\n        var twoTimesResist = [];\n        var fourTimesResist = [];\n        var immune = [];\n        \n        if(type2) {\n            var type1Name = '';\n            var type2Name = '';\n            var flag = true;\n            \n            for(var i = 0; i < type1.double_damage_from.length; i++) { \n                type1Name = type1.double_damage_from[i].name;\n                flag = true;\n                \n                type2.double_damage_from.map(t => {\n                    if(type1Name === t.name) {\n                        flag = false;\n                        fourTimesWeak.push(t.name);\n                    }\n                });\n\n                \n                type2.half_damage_from.map(t => {\n                    if(type1Name === t.name) {\n                        flag = false;\n                    }\n                });\n                \n                type2.no_damage_from.map(t => {\n                    if(type1Name === t.name) {\n                        flag = false;\n                        if(!immune.includes(type1Name)) {\n                            immune.push(type1Name);\n                        }\n                    }\n                });\n\n                if(flag) {\n                    if(!fourTimesWeak.includes(type1Name)) {\n                        twoTimesWeak.push(type1Name);\n                    }\n                }\n            }\n\n            for(var i = 0; i < type2.double_damage_from.length; i++) { \n                type2Name = type2.double_damage_from[i].name;\n\n                flag = true;\n                \n                type1.half_damage_from.map(t => {\n                    if(type2Name === t.name) {\n                        flag = false;\n                    }\n                });\n                \n                type1.no_damage_from.map(t => {\n                    if(type2Name === t.name) {\n                        flag = false;\n                        if(!immune.includes(type2Name)) {\n                            immune.push(type2Name);\n                        }\n                    }\n                });\n\n                if(flag) {\n                    if(!fourTimesWeak.includes(type2Name)) {\n                        twoTimesWeak.push(type2Name);\n                    }\n                }\n            }\n\n            for(var i = 0; i < type1.half_damage_from.length; i++) { \n                type1Name = type1.half_damage_from[i].name;\n                flag = true;\n                \n                type2.half_damage_from.map(t => {\n                    if(type1Name === t.name) {\n                        flag = false;\n                        fourTimesResist.push(t.name);\n                    }\n                });\n\n                \n                type2.double_damage_from.map(t => {\n                    if(type1Name === t.name) {\n                        flag = false;\n                    }\n                });\n                \n                type2.no_damage_from.map(t => {\n                    if(type1Name === t.name) {\n                        flag = false;\n                    }\n                });\n\n                if(flag) {\n                    if(!fourTimesResist.includes(type1Name)) {\n                        twoTimesResist.push(type1Name);\n                    }\n                }\n            }\n\n            for(var i = 0; i < type2.half_damage_from.length; i++) { \n                type2Name = type2.half_damage_from[i].name;\n\n                flag = true;\n                \n                type1.double_damage_from.map(t => {\n                    if(type2Name === t.name) {\n                        flag = false;\n                    }\n                });\n                \n                type1.no_damage_from.map(t => {\n                    if(type2Name === t.name) {\n                        flag = false;\n                    }\n                });\n\n                if(flag) {\n                    if(!fourTimesResist.includes(type2Name)) {\n                        twoTimesResist.push(type2Name);\n                    }\n                }\n            }\n\n            for(var i = 0; i < type1.no_damage_from.length; i++) {\n                type1Name = type1.no_damage_from[i].name;\n                if(!immune.includes(type1Name)) {\n                    immune.push(type1Name);\n                }\n            }\n\n            for(var i = 0; i < type2.no_damage_from.length; i++) {\n                type2Name = type2.no_damage_from[i].name;\n                if(!immune.includes(type2Name)) {\n                    immune.push(type2Name);\n                }\n            }\n\n            typeDamage.fourTimesWeak = fourTimesWeak;\n            typeDamage.twoTimesWeak = twoTimesWeak;\n            typeDamage.twoTimesResist = twoTimesResist;\n            typeDamage.fourTimesResist = fourTimesResist;\n            typeDamage.immune = immune;\n            console.log(`immune: ${immune}`);\n        } else {\n            for(var i = 0; i < type1.double_damage_from.length; i++){\n                twoTimesWeak.push(type1.double_damage_from[i].name);\n            }\n\n            for(var i = 0; i < type1.half_damage_from.length; i++){\n                twoTimesResist.push(type1.half_damage_from[i].name);\n            }\n\n            for(var i = 0; i < type1.no_damage_from.length; i++){\n                immune.push(type1.no_damage_from[i].name);\n            }\n            typeDamage.twoTimesWeak = twoTimesWeak;\n            typeDamage.twoTimesResist = twoTimesResist;\n            typeDamage.immune = immune;\n        }\n\n        return typeDamage;\n    }\n\n    render(props) {\n        const { \n            name, \n            sprites, \n            image,\n            damage_relations,\n            type1_damage,\n            type2_damage,\n            types\n        } = this.props.pokemonData;\n\n        let pokeImage;\n        if( name ) {\n            var typeDamage = this.typeDamageCalculations(type1_damage, type2_damage);\n\n            pokeImage = <img src={`${image}`} style={{ marginTop: '10px', marginBottom: '8px' }}/>;\n            var pokeName = <span>{name.toUpperCase()}</span>;\n            var color = typeColors[types[0]?.type?.name].background;\n            var pokeTyping = [<span className={'badge badge-pill'} style={{ background: `${color}`, color: 'white', marginRight: '5px' }}>{types[0]?.type?.name}</span>];\n            if(types[1]) {\n                color = typeColors[types[1]?.type?.name].background;\n                pokeTyping.push(<span className={'badge badge-pill'} style={{ background: `${color}`, color: 'white', marginRight: '5px' }}>{types[1]?.type?.name}</span>);\n            }\n            var navbar = (\n                <Nav \n                        style={{ marginTop: '40px' }} \n                        variant=\"pills\"\n                        defaultActiveKey={this.state.activeKey}\n                        onSelect={(selected) => this.setState({ activeKey: selected })}\n                    >\n                        <Nav.Item style={{ marginRight: '5px' }} >\n                            <Nav.Link style={{ fontWeight: 'bold' }} eventKey=\"link-0\">Weaknesses</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item style={{ marginRight: '5px' }}>\n                            <Nav.Link style={{ fontWeight: 'bold' }} eventKey=\"link-1\">Resistances</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link style={{ fontWeight: 'bold' }} eventKey=\"link-2\">Immunities</Nav.Link>\n                        </Nav.Item>\n                </Nav>\n            )\n        }\n\n        return (\n            <div>\n                <div class=\"jumbotron\" style={{ background: '#000' }}>\n                    <div class=\"text-center\">\n                        {pokeImage}\n                    </div>\n                    <div className=\"text-center\" style={{ color: 'white', fontWeight: 'bold', marginBottom: '5px' }}>\n                        {pokeName}\n                    </div>\n                    <div className=\"text-center\">\n                        {pokeTyping}\n                    </div>\n\n                    {navbar}\n\n                    {image !== undefined && this.state.activeKey === 'link-0' ? <List fourTimesWeak={typeDamage.fourTimesWeak} twoTimesWeak={typeDamage.twoTimesWeak}/> : ''}\n                    {this.state.activeKey === 'link-1' ? <List fourTimesResist={typeDamage.fourTimesResist} twoTimesResist={typeDamage.twoTimesResist}/> : ''}\n                    {this.state.activeKey === 'link-2' ? <List immune={typeDamage.immune}/> : ''}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InfoCard;","import React from 'react';\nimport PokemonNames from '../pokemonNames';\nimport { Carousel } from 'react-bootstrap';\n\nconst LandingPage = () => {\n    var tempNames = PokemonNames;\n    var length = tempNames.length;\n    length--;\n    for(let i = length; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const arr = tempNames[i]\n        tempNames[i] = tempNames[j]\n        tempNames[j] = arr\n    }\n      \n    var pokes1 = [];\n    var pokes2 = [];\n    var tempPoke1 = '';\n    var tempPoke2 = '';\n    for(var i = 0; i < 30; i++) {\n        tempPoke1 = tempNames[i].title.toLowerCase();\n        tempPoke2 = tempNames[i+30].title.toLowerCase();\n        pokes1.push(tempPoke1);\n        pokes2.push(tempPoke2);\n    }\n\n    return (\n        <div class=\"text-center\">\n            <Carousel interval='2000' controls={false} indicators={false}>\n                {pokes1.map(i => { return <Carousel.Item><img src={`/3dpokemonsprites/${i}.gif`} style={{ marginTop: '10px', marginBottom: '8px' }}/></Carousel.Item>})}\n            </Carousel>\n        </div>\n    );\n}\n\nexport default LandingPage;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport InfoCard from './InfoCard';\nimport LandingPage from './LandingPage';\nimport \"bootswatch/dist/cyborg/bootstrap.min.css\";\n\nclass App extends React.Component {\n    state = { \n        pokemonData: { \n            sprites: {\n                front_default: '' \n            }\n        },\n        landingPageOn: true \n    };\n\n    onSearchSubmit = async (term) => {\n        const response = await unsplash.get(`/pokemon/${term}`);\n        const types = response.data.types;\n        const type1 = await unsplash.get(`/type/${types[0].type.name}`);\n        response.data.damage_relations = type1.data.damage_relations;\n        response.data.type1_damage = type1.data.damage_relations;\n        if( types[1] ) {\n            const type2 = await unsplash.get(`/type/${types[1].type.name}`);\n            response.data.type2_damage = type2.data.damage_relations;\n        }\n        term = term.toLowerCase();\n        response.data.image = `/3dpokemonsprites/${term}.gif`;\n        this.setState({ pokemonData: response.data, landingPageOn: false });\n    }\n\n    render() {\n        return (\n            <div className=\"ui container\" style={{ marginTop: '10px'}}>\n                <SearchBar onSubmit={this.onSearchSubmit}/>\n                <InfoCard pokemonData={this.state.pokemonData}/>\n                {this.state.landingPageOn === true ? <LandingPage /> : ''}\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}